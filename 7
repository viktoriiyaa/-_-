#include <iostream>
#include <cmath>
#include <iomanip>

// Функция, которую интегрируем: x^5 / sqrt(4 - x^2)
double f(double x) {
    double denominator = sqrt(4.0 - x*x);
    // Проверка на особые точки
    if (denominator <= 0 || std::isnan(denominator)) {
        std::cerr << "Ошибка: функция не определена в точке x = " << x << std::endl;
        return 0;
    }
    return pow(x, 5) / denominator;
}

// Метод прямоугольников для численного интегрирования
double rectangleMethod(double a, double b, int n) {
    double h = (b - a) / n; // Ширина прямоугольников
    double sum = 0.0;

    for (int i = 0; i < n; ++i) {
        double x = a + (i + 0.5) * h; // Средняя точка интервала
        sum += f(x) * h; // Площадь прямоугольника
    }

    return sum;
}

int main() {
    double lowerLimit = 0.0; // Нижний предел (0)
    double upperLimit = 2.0; // Верхний предел (2)
    double previousResult = 0.0;
    double result = 0.0;
    int n = 1; // Начальное количество прямоугольников

    // Проверка особых точек на границах
    if (4.0 - lowerLimit*lowerLimit <= 0 || 4.0 - upperLimit*upperLimit <= 0) {
        std::cerr << "Ошибка: функция не определена на границах интервала" << std::endl;
        return 1;
    }

    std::cout << "Вычисление интеграла от x^5/sqrt(4-x^2) от " 
              << lowerLimit << " до " << upperLimit << std::endl;

    while (true) {
        result = rectangleMethod(lowerLimit, upperLimit, n);
        
        // Проверка на сходимость
        if (n > 1 && fabs(result - previousResult) < 1e-6) {
            break; // Достигнута заданная точность
        }

        previousResult = result;
        n *= 2; // Увеличиваем количество прямоугольников

        // Защита от бесконечного цикла
        if (n > 1000000) {
            std::cerr << "Достигнуто максимальное количество разбиений" << std::endl;
            break;
        }
    }

    std::cout << std::fixed << std::setprecision(8);
    std::cout << "Численное значение интеграла: " << result << std::endl;
    std::cout << "Аналитическое значение: " << 128.0/15.0 << std::endl; // 128/15 ≈ 8.53333333
    std::cout << "Количество разбиений: " << n << std::endl;

    return 0;
}
